import { resolve } from 'path'
import fs from 'fs-extra'
import { MODULE_NAME } from './constants'
import type Context from './context'

export async function generateDeclaration(ctx: Context, filePath: string) {
  await fs.remove(filePath)

  const body = Array.from(ctx.cache)
    .sort((a, b) => a.localeCompare(b))
    .map(name => `  readonly ${name}: string`)
    .join('\n')

  const code = `// Generated by '${MODULE_NAME}'
// We suggest you to commit this file into source control

/// <reference types="vite/client" />

interface ImportMetaEnv {
${body}
}

interface ImportMeta {
  readonly env: ImportMetaEnv
}
`
  await fs.outputFile(filePath, code)
}

export async function generateEnvFiles(ctx: Context) {
  for (const path of Array.from(ctx.modeFiles)) {
    const filePath = resolve(ctx.root, path)

    try {
      await fs.ensureFile(filePath)
    }
    catch (error) {
      await fs.outputFile(filePath, '')
    }
  }
}
